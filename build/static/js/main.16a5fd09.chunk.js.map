{"version":3,"sources":["components/Wrapper.jsx","components/WeatherSearch.jsx","components/Content.jsx","components/Location.jsx","components/WeatherData.jsx","components/Main.jsx","App.js","index.js"],"names":["Wrapper","props","className","children","WeatherSearch","onSubmit","api_call","method","name","type","autoComplete","placeholder","Content","Location","city","country","d","day","getDay","date","getDate","month","getMonth","year","getFullYear","dateBuilder","Date","WeatherData","Math","round","weather","temp","src","icon","alt","description","Main","useState","setWeather","setCity","setCountry","setDescription","setIcon","e","a","preventDefault","location","target","elements","value","url","request","axios","get","response","data","main","sys","console","log","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NAUeA,G,MARC,SAACC,GACf,OACE,yBAAKC,UAAU,OACb,8BAAOD,EAAME,a,gDCsBJC,EAzBO,SAACH,GAGrB,OACE,6BACE,yBAAKC,UAAU,cACb,0BAAMG,SAAUJ,EAAMK,SAAUC,OAAO,QACrC,2BACEC,KAAK,WACLC,KAAK,OACLP,UAAU,aACVQ,aAAa,MAEbC,YAAY,mBAKd,4BAAQF,KAAK,UAAb,UCdKG,EAJC,SAACX,GACf,OAAO,6BAAMA,EAAME,WC+CNU,EAhDE,SAACZ,GAmChB,OACE,6BACE,yBAAKC,UAAU,gBACb,yBAAKM,KAAK,OAAON,UAAU,YACxBD,EAAMa,KADT,KACiBb,EAAMc,SAEvB,yBAAKb,UAAU,QAAf,IAxCc,SAACc,GACnB,IAyBIC,EAVO,CACT,SACA,SACA,UACA,YACA,WACA,SACA,YAGaD,EAAEE,UACbC,EAAOH,EAAEI,UACTC,EA3BS,CACX,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,aACA,UACA,WACA,YAeiBL,EAAEM,YACjBC,EAAOP,EAAEQ,cAEb,MAAM,GAAN,OAAUP,EAAV,YAAiBE,EAAjB,YAAyBE,EAAzB,YAAkCE,GASNE,CAAY,IAAIC,MAAxC,KACA,yBAAKxB,UAAU,WCrBRyB,EArBK,SAAC1B,GAKnB,OACE,yBAAKC,UAAU,qBACb,yBAAKA,UAAU,uBACZ0B,KAAKC,MAAM5B,EAAM6B,QAAQC,MAD5B,SAGA,yBAAK7B,UAAU,sBACb,yBACE8B,IAAG,2CAAsC/B,EAAMgC,KAA5C,WACHC,IAAI,kBAGR,yBAAKhC,UAAU,sBAAsBD,EAAMkC,eCoClCC,EA7CF,WAAO,IAAD,EACaC,qBADb,mBACVP,EADU,KACDQ,EADC,OAEOD,mBAAS,IAFhB,mBAEVvB,EAFU,KAEJyB,EAFI,OAGaF,mBAAS,IAHtB,mBAGVtB,EAHU,KAGDyB,EAHC,OAIqBH,mBAAS,IAJ9B,mBAIVF,EAJU,KAIGM,EAJH,OAKOJ,mBAAS,IALhB,mBAKVJ,EALU,KAKJS,EALI,KAOXpC,EAAQ,uCAAG,WAAOqC,GAAP,qBAAAC,EAAA,6DACfD,EAAEE,iBACIC,EAAWH,EAAEI,OAAOC,SAASF,SAASG,MAE5B,mCAEVC,EANS,4DAMkDJ,EANlD,+BAIC,oCAIVK,EAAUC,IAAMC,IAAIH,GARX,SAUQC,EAVR,OAUTG,EAVS,OAYfhB,EAAWgB,EAASC,KAAKC,MACzBjB,EAAQe,EAASC,KAAK/C,MACtBgC,EAAWc,EAASC,KAAKE,IAAI1C,SAC7B2B,EAAQY,EAASC,KAAKzB,QAAQ,GAAGG,MACjCQ,EAAea,EAASC,KAAKzB,QAAQ,GAAG0B,MAhBzB,4CAAH,sDAqBd,OAFA1B,GAAW4B,QAAQC,IAAI7B,GAGrB,6BACE,kBAAC,EAAD,CAAexB,SAAUA,IACzB,kBAAC,EAAD,KACGwB,GAAW,kBAAC,EAAD,CAAUhB,KAAMA,EAAMC,QAASA,IAC1Ce,GACC,kBAAC,EAAD,CACEA,QAASA,EACTK,YAAaA,EACbF,KAAMA,OC9BH2B,EARH,WACV,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,QCNNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.16a5fd09.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Wrapper = (props) => {\r\n  return (\r\n    <div className=\"app\">\r\n      <main>{props.children}</main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Wrapper;\r\n","import React from \"react\";\r\n\r\nconst WeatherSearch = (props) => {\r\n  // const [query, setQuery] = useState(\"\")\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"search-box\">\r\n        <form onSubmit={props.api_call} method=\"post\">\r\n          <input\r\n            name=\"location\"\r\n            type=\"text\"\r\n            className=\"search-bar\"\r\n            autoComplete=\"off\"\r\n            // required\r\n            placeholder=\"Search City...\"\r\n            // onChange={(e) => setQuery(e.target.value)}\r\n            // value={query}\r\n            //   onKeyPress={search}\r\n          />\r\n          <button type=\"submit\">GO</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherSearch;\r\n","import React from \"react\";\r\n\r\nconst Content = (props) => {\r\n  return <div>{props.children}</div>;\r\n};\r\n\r\nexport default Content;\r\n","import React from \"react\";\r\n\r\nconst Location = (props) => {\r\n  const dateBuilder = (d) => {\r\n    let months = [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"Septempber\",\r\n      \"October\",\r\n      \"November\",\r\n      \"December\",\r\n    ];\r\n\r\n    let days = [\r\n      \"Sunday\",\r\n      \"Monday\",\r\n      \"Tuesday\",\r\n      \"Wednesday\",\r\n      \"Thursday\",\r\n      \"Friday\",\r\n      \"Saturday\",\r\n    ];\r\n\r\n    let day = days[d.getDay()];\r\n    let date = d.getDate();\r\n    let month = months[d.getMonth()];\r\n    let year = d.getFullYear();\r\n\r\n    return `${day} ${date} ${month} ${year}`;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"location-box\">\r\n        <div name=\"city\" className=\"location\">\r\n          {props.city}, {props.country}\r\n        </div>\r\n        <div className=\"date\"> {dateBuilder(new Date())} </div>\r\n        <div className=\"box\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Location;\r\n\r\n//   base: \"https://api.openweathermap.org/data/2.5/\",\r\n// };\r\n\r\n// function App() {\r\n//   const api = {\r\n//     key: \"b3eeac9873199e3b6c23996e0eb4ab5e\",\r\n//     base: \"https://api.openweathermap.org/data/2.5/\",\r\n//   };\r\n\r\n//   const [query, setQuery] = useState(\"\");\r\n//   const [weather, setWeather] = useState({});\r\n\r\n//   const search = (evt) => {\r\n//     if (evt.key === \"enter\") {\r\n//       fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\r\n//         .then((res) => res.json())\r\n//         .then((result) => {\r\n//           setWeather(result);\r\n//           setQuery(\"\");\r\n//           console.log(weather);\r\n//         });\r\n//     }\r\n//   };\r\n\r\n//   const dateBuilder = (d) => {\r\n//     let months = [\r\n//       \"January\",\r\n//       \"February\",\r\n//       \"March\",\r\n//       \"April\",\r\n//       \"May\",\r\n//       \"June\",\r\n//       \"July\",\r\n//       \"August\",\r\n//       \"Septempber\",\r\n//       \"October\",\r\n//       \"November\",\r\n//       \"December\",\r\n//     ];\r\n\r\n//     let days = [\r\n//       \"Sunday\",\r\n//       \"Monday\",\r\n//       \"Tuesday\",\r\n//       \"Wednesday\",\r\n//       \"Thursday\",\r\n//       \"Friday\",\r\n//       \"Saturday\",\r\n//     ];\r\n\r\n//     let day = days[d.getDay()];\r\n//     let date = d.getDate();\r\n//     let month = months[d.getMonth()];\r\n//     let year = d.getFullYear();\r\n\r\n//     return `${day} ${date} ${month} ${year}`;\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"app\">\r\n//       <main>\r\n//         <div className=\"search-box\">\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"search-bar\"\r\n//             autoComplete=\"on\"\r\n//             required\r\n//             placeholder=\"City...\"\r\n//             onChange={(e) => setQuery(e.target.value)}\r\n//             value={query}\r\n//             onKeyPress={search}\r\n//           />\r\n//         </div>\r\n//         <div className=\"location-box\">\r\n//           <div className=\"location\"> London, UK </div>\r\n//           <div className=\"date\"> {dateBuilder(new Date())} </div>\r\n//           <div className=\"box\"></div>\r\n//         </div>\r\n//         <div className=\"weather-box\">\r\n//           <div className=\"temp\"> 20° C </div>\r\n//           <div className=\"weather-icon\"> sun </div>\r\n//           <div className=\"weather\"> Sunny </div>\r\n//         </div>\r\n//         <div className=\"social\"></div>\r\n//       </main>\r\n//     </div>\r\n//   );\r\n","import React from \"react\";\r\n\r\nconst WeatherData = (props) => {\r\n  // object destructuriong in\r\n  // const WeatherData = ({ weather }) => {\r\n  // const { temp } = weather;\r\n\r\n  return (\r\n    <div className=\"weather-data__box\">\r\n      <div className=\"weather-data__value\">\r\n        {Math.round(props.weather.temp)}°C\r\n      </div>\r\n      <div className=\"weather-data__icon\">\r\n        <img\r\n          src={`http://openweathermap.org/img/wn/${props.icon}@2x.png`}\r\n          alt=\"weather icon\"\r\n        />\r\n      </div>\r\n      <div className=\"weather-data__main\">{props.description}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherData;\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport WeatherSearch from \"./WeatherSearch\";\r\nimport Content from \"./Content\";\r\nimport Location from \"./Location\";\r\nimport WeatherData from \"./WeatherData\";\r\n// import Error from \"./Error\";\r\n\r\nconst Main = () => {\r\n  const [weather, setWeather] = useState();\r\n  const [city, setCity] = useState(\"\");\r\n  const [country, setCountry] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [icon, setIcon] = useState(\"\");\r\n\r\n  const api_call = async (e) => {\r\n    e.preventDefault();\r\n    const location = e.target.elements.location.value;\r\n\r\n    const API_KEY = \"b3eeac9873199e3b6c23996e0eb4ab5e\";\r\n\r\n    const url = `https://api.openweathermap.org/data/2.5/weather?q=${location}&units=metric&appid=${API_KEY}`;\r\n\r\n    const request = axios.get(url);\r\n\r\n    const response = await request;\r\n\r\n    setWeather(response.data.main);\r\n    setCity(response.data.name);\r\n    setCountry(response.data.sys.country);\r\n    setIcon(response.data.weather[0].icon);\r\n    setDescription(response.data.weather[0].main);\r\n  };\r\n\r\n  weather && console.log(weather);\r\n\r\n  return (\r\n    <div>\r\n      <WeatherSearch api_call={api_call} />\r\n      <Content>\r\n        {weather && <Location city={city} country={country} />}\r\n        {weather && (\r\n          <WeatherData\r\n            weather={weather}\r\n            description={description}\r\n            icon={icon}\r\n          />\r\n        )}\r\n      </Content>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React from \"react\";\n\nimport Wrapper from \"./components/Wrapper\";\nimport Main from \"./components/Main\";\n// import WeatherSearch from \"./components/WeatherSearch\";\n// import Location from \"./components/Location\";\n// import WeatherData from \"./components/WeatherData\";\n\nconst App = () => {\n  return (\n    <Wrapper>\n      <Main />\n    </Wrapper>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}